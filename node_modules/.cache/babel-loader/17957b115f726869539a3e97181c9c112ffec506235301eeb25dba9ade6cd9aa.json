{"ast":null,"code":"import styled, { css } from 'styled-components';\nexport const InputContainer = styled.div`\n  width: 100%;\n  height: 48px;\n  border: 1px solid #000;\n  display: flex;\n  align-items: center;\n  margin: 16px auto;\n  position: relative;\n\n  \n\n    ${({\n  variant\n}) => variant === 'checkbox' && css`\n            width: 20px;\n            height: 20px;\n            border: 1px solid #000;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            margin: 16px 0;\n            position: relative;\n\n        \n    `}\n\n \n`;\nexport const IconContainer = styled.div`\n    margin-left: 10px;\n    width: 24px;\n    height: 24px;\n    svg{\n        width: 100%;\n        height: 100%;\n    }\n\n`;\nexport const InputText = styled.input`\n    background: transparent;\n    color: #000;\n    border: 0;\n    width: 100%;\n    height: 48px;\n    outline: none;\n    margin-left: 10px;\n    font-size: 16px;\n\n    ${({\n  variant\n}) => variant === 'checkbox' && css`\n            background: transparent;\n            color: #000;\n            border: 0;\n            width: 100%;\n            height: 100%;\n            outline: none;\n            margin-left: 0;\n            \n            border: none; /* Remove qualquer borda padrão */\n            outline: none; /* Remove o contorno ao focar */\n            appearance: none; /* Remove o estilo padrão do navegador */\n            -webkit-appearance: none; /* Para compatibilidade com Webkit (Safari, Chrome) */\n            background-color: transparent; /* Deixe o fundo transparente */\n\n            /* Estilo do checkbox quando não estiver marcado */\n            position: relative;\n            display: inline-block;\n            width: 24px;\n            height: 24px;\n            border: 2px solid #000; /* Borda externa do checkbox */\n            border-radius: 4px; /* Cantos arredondados */\n            \n            /* Estilo do \"check\" quando marcado */\n            &:checked {\n                background-color: #000; /* Cor de fundo quando marcado */\n                border-color: #000; /* Borda quando marcado */\n            }\n            \n            /* Estilo do \"checkmark\" (marca de seleção) */\n            &:checked::after {\n                content: \"✔\"; /* Símbolo do check */\n                position: absolute;\n                top: 0;\n                left: 4px;\n                color: white;\n                font-size: 16px; /* Tamanho do símbolo */\n            }\n        `}\n`;\nexport const ViewPassword = styled.div`\n    width: 24px;\n    height: 24px;\n    position: absolute;\n    top: 50%;\n    right: 10px;\n    transform: translate(0, -50%);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    \n    svg{\n        width: 100%;\n        height: 100%;\n    }\n    \n    &:hover{\n        cursor: pointer\n    }\n\n`;\nexport const ErrorText = styled.p`\n    color: #FF0000;\n    font-size: 12px;\n    margin-bottom: 5px;\n`;","map":{"version":3,"names":["styled","css","InputContainer","div","variant","IconContainer","InputText","input","ViewPassword","ErrorText","p"],"sources":["/Users/thiagorosettimiranda/Documents/Developer/condo_facil/src/components/input/styles.ts"],"sourcesContent":["import styled, {css} from 'styled-components';\n\ninterface InputContainerProps {\n    variant: \"primario\" | \"checkbox\" | \"radio\"; // Adicione os valores que você espera\n}\n\nexport const InputContainer = styled.div<InputContainerProps>`\n  width: 100%;\n  height: 48px;\n  border: 1px solid #000;\n  display: flex;\n  align-items: center;\n  margin: 16px auto;\n  position: relative;\n\n  \n\n    ${({ variant }) =>\n        variant === 'checkbox' && css`\n            width: 20px;\n            height: 20px;\n            border: 1px solid #000;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            margin: 16px 0;\n            position: relative;\n\n        \n    `}\n\n \n`;\n\nexport const IconContainer = styled.div`\n    margin-left: 10px;\n    width: 24px;\n    height: 24px;\n    svg{\n        width: 100%;\n        height: 100%;\n    }\n\n`;\nexport const InputText = styled.input<InputContainerProps>`\n    background: transparent;\n    color: #000;\n    border: 0;\n    width: 100%;\n    height: 48px;\n    outline: none;\n    margin-left: 10px;\n    font-size: 16px;\n\n    ${({ variant }) =>\n        variant === 'checkbox' && css`\n            background: transparent;\n            color: #000;\n            border: 0;\n            width: 100%;\n            height: 100%;\n            outline: none;\n            margin-left: 0;\n            \n            border: none; /* Remove qualquer borda padrão */\n            outline: none; /* Remove o contorno ao focar */\n            appearance: none; /* Remove o estilo padrão do navegador */\n            -webkit-appearance: none; /* Para compatibilidade com Webkit (Safari, Chrome) */\n            background-color: transparent; /* Deixe o fundo transparente */\n\n            /* Estilo do checkbox quando não estiver marcado */\n            position: relative;\n            display: inline-block;\n            width: 24px;\n            height: 24px;\n            border: 2px solid #000; /* Borda externa do checkbox */\n            border-radius: 4px; /* Cantos arredondados */\n            \n            /* Estilo do \"check\" quando marcado */\n            &:checked {\n                background-color: #000; /* Cor de fundo quando marcado */\n                border-color: #000; /* Borda quando marcado */\n            }\n            \n            /* Estilo do \"checkmark\" (marca de seleção) */\n            &:checked::after {\n                content: \"✔\"; /* Símbolo do check */\n                position: absolute;\n                top: 0;\n                left: 4px;\n                color: white;\n                font-size: 16px; /* Tamanho do símbolo */\n            }\n        `}\n`;\n\nexport const ViewPassword = styled.div`\n    width: 24px;\n    height: 24px;\n    position: absolute;\n    top: 50%;\n    right: 10px;\n    transform: translate(0, -50%);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    \n    svg{\n        width: 100%;\n        height: 100%;\n    }\n    \n    &:hover{\n        cursor: pointer\n    }\n\n`;\nexport const ErrorText = styled.p`\n    color: #FF0000;\n    font-size: 12px;\n    margin-bottom: 5px;\n`\n"],"mappings":"AAAA,OAAOA,MAAM,IAAGC,GAAG,QAAO,mBAAmB;AAM7C,OAAO,MAAMC,cAAc,GAAGF,MAAM,CAACG,GAAwB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,CAAC;EAAEC;AAAQ,CAAC,KACVA,OAAO,KAAK,UAAU,IAAIH,GAAG;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AAED,OAAO,MAAMI,aAAa,GAAGL,MAAM,CAACG,GAAG;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,OAAO,MAAMG,SAAS,GAAGN,MAAM,CAACO,KAA0B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,CAAC;EAAEH;AAAQ,CAAC,KACVA,OAAO,KAAK,UAAU,IAAIH,GAAG;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,CAAC;AAED,OAAO,MAAMO,YAAY,GAAGR,MAAM,CAACG,GAAG;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,OAAO,MAAMM,SAAS,GAAGT,MAAM,CAACU,CAAC;AACjC;AACA;AACA;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}